version: '3.9'

volumes:
  postgres_data: {}

networks:
  kong-net:
    driver: bridge

services:

  #######################################
  # Postgres: The database used by Kong
  #######################################
  kong-database:
    image: postgres:${POSTGRES_TAG}
    volumes:
      - postgres_data:${POSTGRES_TARGET_DATA_VOLUME}
    #restart: always
    restart: on-failure
    networks:
      - kong-net
    environment:
      POSTGRES_USER: ${KONG_DB_USERNAME}
      POSTGRES_DB: ${KONG_DB_NAME}
      POSTGRES_PASSWORD: ${KONG_DB_PASSWORD}
    ports:
      - $POSTGRES_PORT:5432
#    healthcheck:
#      test: ["CMD", "pg_isready", "-U", "kong"]
#      interval: 30s
#      timeout: 30s
#      retries: 5

  #######################################
  # Kong database migration
  #######################################
  kong-migration:
    image: kong:${KONG_TAG}
    #command: "kong migrations bootstrap"
    entrypoint: sh -c "sleep 10 && kong migrations bootstrap -v"
    restart: on-failure
    environment:
      KONG_DATABASE: ${KONG_DATABASE}
      KONG_PG_HOST: ${KONG_DB_HOST}
      KONG_PG_DATABASE: ${KONG_DB_NAME}
      KONG_PG_USER: ${KONG_DB_USERNAME}
      KONG_PG_PASSWORD: ${KONG_DB_PASSWORD}
    links:
      - kong-database
    depends_on:
      - kong-database
    networks:
      - kong-net
#    healthcheck:
#      test: ["CMD", "pg_isready", "-U", "kong"]
#      interval: 5s
#      timeout: 5s
#      retries: 5

  #######################################
  # Kong: The API Gateway
  #######################################
  kong:
    image: kong:${KONG_TAG}
    restart: on-failure
    networks:
      - kong-net
    environment:
      KONG_DATABASE: ${KONG_DATABASE}
      KONG_PG_HOST: ${KONG_DB_HOST}
      KONG_PG_DATABASE: ${KONG_DB_NAME}
      KONG_PG_USER: ${KONG_DB_USERNAME}
      KONG_PG_PASSWORD: ${KONG_DB_PASSWORD}
      KONG_PROXY_ACCESS_LOG: ${KONG_PROXY_ACCESS_LOG}
      KONG_ADMIN_ACCESS_LOG: ${KONG_ADMIN_ACCESS_LOG}
      KONG_PROXY_ERROR_LOG: ${KONG_PROXY_ERROR_LOG}
      KONG_ADMIN_ERROR_LOG: ${KONG_ADMIN_ERROR_LOG}
      KONG_ADMIN_LISTEN: ${KONG_ADMIN_LISTEN}
    depends_on:
      - kong-migration
      - kong-database
    ports:
      - 8000:8000
      - 8443:8443
      - 8001:8001
      - 8444:8444
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://kong:8001"]
#      interval: 10s
#      timeout: 10s
#      retries: 10
    

  #######################################
  # Konga database prepare
  #######################################
  konga-prepare:
    image: pantsel/konga:next
    command: "-c prepare -a postgres -u postgresql://kong:${KONG_DB_PASSWORD}@kong-database:5432/konga_db"
    restart: on-failure
    networks:
      - kong-net
    links:
      - kong-database
    depends_on:
      - kong-database
#    healthcheck:
#      test: ["CMD", "pg_isready", "-U", "kong"]
#      interval: 10s
#      timeout: 10s
#      retries: 5

  #######################################
  # Konga: Kong GUI
  #######################################
  konga:
    image: pantsel/konga:next
    restart: on-failure
    networks:
        - kong-net
    environment:
      DB_ADAPTER: ${KONG_DATABASE}
      DB_HOST: ${KONGA_DB_HOST}
      DB_PORT: ${KONGA_DB_PORT}
      DB_DATABASE: ${KONGA_DB_NAME}
      DB_USER: ${KONGA_DB_USERNAME}
      DB_PASSWORD: ${KONGA_DB_PASSWORD}
      TOKEN_SECRET: ${KONGA_TOKEN_SECRET}      
      NODE_ENV: ${KONGA_ENV}
      KONGA_HOOK_TIMEOUT: ${KONGA_HOOK_TIMEOUT}
    depends_on:
      - kong-database
    ports:
      - $KONGA_PORT:1337